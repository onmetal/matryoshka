
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: kubecontrollermanagers.matryoshka.onmetal.de
spec:
  group: matryoshka.onmetal.de
  names:
    kind: KubeControllerManager
    listKind: KubeControllerManagerList
    plural: kubecontrollermanagers
    singular: kubecontrollermanager
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: number of ready replicas
      jsonPath: .status.readyReplicas
      name: Ready
      type: string
    - description: number of updated replicas
      jsonPath: .status.updatedReplicas
      name: Up-To-Date
      type: number
    - description: number of available replicas
      jsonPath: .status.availableReplicas
      name: Available
      type: number
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KubeControllerManager is the Schema for the kubecontrollermanagers
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KubeControllerManagerSpec defines the desired state of KubeControllerManager
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Annotations sets annotations on resources managed by
                  this.
                type: object
              cluster:
                description: Cluster specifies cluster specific settings.
                properties:
                  name:
                    description: Name is the cluster name for the kube controller
                      manager to use.
                    type: string
                  signing:
                    description: Signing specifies signing settings for the cluster.
                    properties:
                      secret:
                        description: Secret specifies the secret the kube controller
                          manager uses for signing. It is expected that the secret
                          contains 'ca.crt' and 'tls.key'.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secret
                    type: object
                required:
                - name
                type: object
              controllers:
                description: Controllers are controller settings for the kube controller
                  manager.
                properties:
                  credentials:
                    default: ServiceAccount
                    description: Credentials specifies how the controllers managed
                      by kube controller manager should handle their credentials towards
                      the Kubernetes API.
                    enum:
                    - Global
                    - ServiceAccount
                    type: string
                  list:
                    default:
                    - '*'
                    description: List is the list of all enabled controllers.
                    items:
                      type: string
                    type: array
                type: object
              kubernetesAPI:
                description: KubernetesAPI are settings on how to interface with the
                  Kubernetes API.
                properties:
                  authenticationKubeconfig:
                    description: AuthenticationKubeconfig specifies the authentication
                      kubeconfig for the kube controller manager to use.
                    properties:
                      secret:
                        description: Secret references the secret for the kube controller
                          manager to lookup. If key is unset, DefaultKubeControllerManagerAuthenticationKubeconfigKey
                          is used.
                        properties:
                          key:
                            description: Key is the key to look up in the config map
                              data. Some types use a default if this value is unset.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secret
                    type: object
                  authorizationKubeconfig:
                    description: AuthorizationKubeconfig specifies the authorization
                      kubeconfig for the kube controller manager to use.
                    properties:
                      secret:
                        description: Secret references the secret for the kube controller
                          manager to lookup. If key is unset, DefaultKubeControllerManagerAuthorizationKubeconfigKey
                          is used.
                        properties:
                          key:
                            description: Key is the key to look up in the config map
                              data. Some types use a default if this value is unset.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secret
                    type: object
                  kubeconfig:
                    description: Kubeconfig specifies the kubeconfig for the kube
                      controller manager to use.
                    properties:
                      secret:
                        description: Secret references the secret for the kube controller
                          manager to lookup. If key is unset, DefaultKubeControllerManagerKubeconfigKey
                          is used.
                        properties:
                          key:
                            description: Key is the key to look up in the config map
                              data. Some types use a default if this value is unset.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secret
                    type: object
                required:
                - kubeconfig
                type: object
              labels:
                additionalProperties:
                  type: string
                description: Labels sets labels on resources managed by this.
                type: object
              replicas:
                description: Replicas specifies the number of kube controller manager
                  replicas to create.
                format: int32
                minimum: 0
                type: integer
              resources:
                description: Resources specifies the resources the kube controller
                  manager container requires.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceAccount:
                description: ServiceAccount specifies how the kube controller manager
                  should handle service accounts.
                properties:
                  privateKey:
                    description: Private key specifies the private key for the kube
                      controller manager to use.
                    properties:
                      secret:
                        description: Secret specifies the secret to look up for the
                          private key of the kube controller manager. If key is left
                          empty, DefaultKubeControllerManagerServiceAccountPrivateKeyKey
                          will be used as default.
                        properties:
                          key:
                            description: Key is the key to look up in the config map
                              data. Some types use a default if this value is unset.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secret
                    type: object
                  rootCertificateAuthority:
                    description: RootCertificateAuthority specifies an optional root
                      certificate authority to distribute as part of each service
                      account.
                    properties:
                      secret:
                        description: Secret specifies the secret to look up for the
                          root ca of service accounts of the kube controller manager.
                          If key is left empty, DefaultKubeControllerManagerServiceAccountRootCertificateAuthorityKey
                          will be used as default.
                        properties:
                          key:
                            description: Key is the key to look up in the config map
                              data. Some types use a default if this value is unset.
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                    required:
                    - secret
                    type: object
                type: object
              version:
                description: Version is the kube controller manager version to use.
                pattern: ^[0-9]+\.[0-9]+\.[0-9]+$
                type: string
            required:
            - cluster
            - kubernetesAPI
            - replicas
            - serviceAccount
            - version
            type: object
          status:
            description: KubeControllerManagerStatus defines the observed state of
              KubeControllerManager
            properties:
              availableReplicas:
                format: int32
                type: integer
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
              readyReplicas:
                format: int32
                type: integer
              replicas:
                format: int32
                type: integer
              unavailableReplicas:
                format: int32
                type: integer
              updatedReplicas:
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
